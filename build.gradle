/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
  id 'java'
  id 'eclipse'
  id 'idea'
  id 'jacoco'
  //id 'io.franzbecker.gradle-lombok' version '1.11'
  id 'net.ltgt.apt' version '0.10'
}

apply plugin: 'application'
mainClassName = 'com.github.narh.util.Main'

sourceCompatibility = "$sourceCompatibility" // -source
targetCompatibility = "$targetCompatibility" // -target

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile('commons-beanutils:commons-beanutils:1.9.3')
  compile('commons-lang:commons-lang:2.6')
  compile('org.apache.commons:commons-lang3:3.7')
  compile('com.google.guava:guava:24.1-jre')
  compile('ch.qos.logback:logback-classic:1.2.3')
  compile('org.projectlombok:lombok:1.16.20')
  testCompile('junit:junit:4.12')
  testCompile('org.mockito:mockito-core:2.18.0')
  testCompile('org.mockito:mockito-inline:2.18.0')
  //testCompile('org.powermock:powermock-api-mockito:1.7.4')
  //testCompile('org.powermock:powermock-module-junit4:1.7.4')

  apt('org.projectlombok:lombok:1.16.20')
}

jar {
  enabled = true
}

task executableJar(type: Jar, dependsOn: jar)  {
  archiveName = "${executableBaseName}.jar"
  manifest {
    attributes 'Main-Class' : mainClassName
  }

  from configurations.compile.collect {it.isDirectory() ? it : zipTree(it)}
  from "$buildDir/classes/java/main"
  from "$buildDir/resources/main"
}



run {
  if (project.hasProperty('args')) {
    args project.args.split('\\s+')
  }
  else {
    args 'com.github.narh.util'
  }

}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

eclipse.classpath.file.whenMerged { cp ->
  cp.entries.findAll { entry ->
    if (entry.kind == "output") {
      entry.path = "${eclipseOutputPath}/java/main"

    }
    if (entry.kind == "src") {
      entry.output = "${eclipseSrcOutputPath}/java/main"

    }
  }
}
